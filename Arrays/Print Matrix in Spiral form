Problem Description
Given an integer A, generate a square matrix filled with elements from 1 to A*A in spiral order. The spiral order will be clockwise in nature starting from (0,0)

Input format
One line of input, containing a single integer A.

Output format
Print a 2-d matrix of size A x A satisfying the spiral order.

Sample Input 1
3

Sample Output 1
1 2 3

8 9 4

7 6 5

Explanation
As you can see the matrix goes spirally with each next position incremented by one.

Constraints
1<=A<=1000






import java.util.*;

class SpiralMatrixII {
    public static void main(String args[]) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int result[][] = spiralMatrixII(n);

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                System.out.print(result[i][j] + " ");
            }
            System.out.println();
        }
    }

    static int[][] spiralMatrixII(int n) {
        int rows=n;
        int cols=n;
        int ans[][]=new int [rows][cols];
        int value=1;

        int firstRow=0;
        int firstCol=0;
        int lastRow=rows-1;
        int lastCol=cols-1;

        while(value<=n*n){
            for(int i=firstCol;i<=lastCol;i++){
                ans[firstRow][i]=value++;
            }

            for(int j=firstRow+1;j<=lastRow;j++){
                ans[j][lastCol]=value++;
            }

            for(int i=lastCol-1; i>=firstCol;i--){
                ans[lastRow][i]=value++;
            }

            for(int j=lastRow-1;j>=firstRow+1;j--){
                ans[j][firstRow]=value++;
            }

            firstRow++;
            firstCol++;
            lastCol--;
            lastRow--;
        }
        return ans;
    }
}
  
  
